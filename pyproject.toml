[project]
name = "learning-autogen"
version = "0.1.0"
description = "Production-grade Multi-Agent AI Research System using AutoGen"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "AutoGen Research Team"}
]
keywords = ["autogen", "ai", "multi-agent", "research", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "autogen-agentchat>=0.7.0",
    "autogen-ext[openai]>=0.7.0",
    "python-dotenv>=1.0.0",
    "flask>=3.0.0",
    "flask-cors>=4.0.0",
    "flask-socketio>=5.3.0",
    "flask-limiter>=3.5.0",
    "flask-sqlalchemy>=3.1.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.0",
    "gunicorn>=21.2.0",
    "python-socketio>=5.10.0",
    "eventlet>=0.35.0",
    "flask-swagger-ui>=4.11.0",
    "pyyaml>=6.0.0",
    "markdown>=3.5.0",
    "bleach>=6.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
    "black>=24.0.0",
    "pre-commit>=3.6.0",
]

[project.scripts]
autogen-research = "autogen_research.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["src/autogen_research"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=src/autogen_research",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
mypy_path = "src"
namespace_packages = false
exclude = [
    "tests/",
    "build/",
    "dist/",
    ".venv/",
    "frontend/",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
