{
  "openapi": "3.0.0",
  "info": {
    "title": "AutoGen Research API",
    "description": "Multi-agent AI research system powered by AutoGen with async task processing, WebSocket updates, and persistent storage",
    "version": "3.0.0",
    "contact": {
      "name": "AutoGen Research Team"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5001",
      "description": "Development server"
    },
    {
      "url": "https://api.production.example.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/v1/research": {
      "post": {
        "summary": "Create research task",
        "description": "Submit a new research task for async processing",
        "tags": ["Research"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "type": "string",
                    "description": "Research question or task",
                    "maxLength": 5000
                  },
                  "use_cache": {
                    "type": "boolean",
                    "description": "Whether to use cached results",
                    "default": true
                  }
                },
                "required": ["task"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Task queued successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "task_id": { "type": "integer" },
                    "celery_task_id": { "type": "string" },
                    "status": { "type": "string" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "summary": "List research tasks",
        "description": "Get paginated list of research tasks",
        "tags": ["Research"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": { "type": "integer", "default": 10 }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "processing", "completed", "failed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully"
          }
        }
      }
    },
    "/api/v1/research/{task_id}": {
      "get": {
        "summary": "Get research task",
        "description": "Retrieve a specific research task by ID",
        "tags": ["Research"],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Task found" },
          "404": { "description": "Task not found" }
        }
      }
    },
    "/api/v1/research/{task_id}/status": {
      "get": {
        "summary": "Get task status",
        "description": "Get current status and progress of a research task",
        "tags": ["Research"],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Status retrieved" }
        }
      }
    },
    "/api/v1/research/{task_id}/export": {
      "get": {
        "summary": "Export research task",
        "description": "Export research task results as Markdown",
        "tags": ["Research"],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Export successful" }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Health check",
        "description": "Check API health and service status",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "summary": "Get configuration",
        "description": "Get current model configuration",
        "responses": {
          "200": {
            "description": "Configuration retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/research": {
      "post": {
        "summary": "Create research task",
        "description": "Submit a new research task for async processing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResearchRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Task queued successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResearchQueuedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "429": {
            "description": "Rate limit exceeded"
          }
        }
      },
      "get": {
        "summary": "List research tasks",
        "description": "Get paginated list of research tasks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "processing", "completed", "failed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/research/{task_id}": {
      "get": {
        "summary": "Get research task",
        "description": "Get details of a specific research task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/api/research/{task_id}/status": {
      "get": {
        "summary": "Get task status",
        "description": "Get current status and progress of a research task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/research/{task_id}/export": {
      "get": {
        "summary": "Export research task",
        "description": "Export research task as markdown",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task exported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "service": {
            "type": "string",
            "example": "autogen-research-api"
          },
          "database": {
            "type": "string",
            "example": "connected"
          },
          "redis": {
            "type": "string",
            "example": "connected"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ConfigResponse": {
        "type": "object",
        "properties": {
          "model_type": {
            "type": "string",
            "example": "ollama"
          },
          "model_name": {
            "type": "string",
            "example": "llama3.2"
          },
          "temperature": {
            "type": "number",
            "example": 0.7
          },
          "max_rounds": {
            "type": "integer",
            "example": 12
          }
        }
      },
      "ResearchRequest": {
        "type": "object",
        "required": ["task"],
        "properties": {
          "task": {
            "type": "string",
            "description": "Research question or task",
            "example": "Explain quantum computing in simple terms"
          },
          "use_cache": {
            "type": "boolean",
            "default": true,
            "description": "Whether to use cached results if available"
          }
        }
      },
      "ResearchQueuedResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task_id": {
            "type": "integer"
          },
          "celery_task_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "queued"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "task": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "failed"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentMessage"
            }
          },
          "metrics": {
            "$ref": "#/components/schemas/Metrics"
          }
        }
      },
      "AgentMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "agent": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "duration": {
            "type": "number"
          },
          "total_messages": {
            "type": "integer"
          },
          "token_usage": {
            "type": "object"
          },
          "model_info": {
            "type": "object"
          }
        }
      },
      "TaskListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "TaskStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task_id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "celery_status": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "ExportResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "markdown": {
            "type": "string"
          }
        }
      }
    }
  }
}
